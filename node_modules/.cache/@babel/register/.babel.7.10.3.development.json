{
  "{\"sourceRoot\":\"C:\\\\Users\\\\Shinnosuke\\\\react-express-elb\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Shinnosuke\\\\react-express-elb\",\"filename\":\"C:\\\\Users\\\\Shinnosuke\\\\react-express-elb\\\\server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Shinnosuke\\\\react-express-elb\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Shinnosuke\\react-express-elb\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Shinnosuke\\react-express-elb",
      "filename": "C:\\Users\\Shinnosuke\\react-express-elb\\server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Shinnosuke\\react-express-elb",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Shinnosuke\\react-express-elb\\server.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Shinnosuke\\react-express-elb\\server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Shinnosuke\\react-express-elb\\",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar PORT = process.env.HTTP_PORT || 4001;\nvar app = (0, _express[\"default\"])();\n\nvar bodyParser = require('body-parser');\n\napp.use(bodyParser.urlencoded({\n  extended: false\n}));\napp.use(bodyParser.json());\n\nvar mysql = require(\"mysql\");\n/*const connection = mysql.createConnection({\r\n  host: process.env.RDS_HOSTNAME,\r\n  user: process.env.RDS_USERNAME,\r\n  password: process.env.RDS_PASSWORD,\r\n  port: process.env.RDS_PORT,\r\n  database: process.env.RDS_DB_NAME\r\n});*/\n\n\nvar connection = mysql.createConnection({\n  host: \"aa1035bth7m2t1e.clsbnr7p4q4m.ap-northeast-1.rds.amazonaws.com\",\n  user: \"root\",\n  password: \"MySQL731sin\",\n  database: \"ebdb\",\n  port: \"3306\"\n});\nconnection.connect(function (err) {\n  if (err) {\n    console.error('Database connection failed: ' + err.stack);\n    return;\n  }\n});\napp.use(_express[\"default\"][\"static\"](_path[\"default\"].join(__dirname, 'client', 'build'))); // <-- Get front-end\n\napp.get('/', function (req, res) {\n  res.send('just gonna send it');\n});\napp.get('/data', function (req, res) {\n  connection.query('SELECT * FROM comments', function (error, results) {\n    console.log(results);\n    res.json(results);\n  });\n});\napp.post('/data/create', function (req, res) {\n  //console.log(req.body);\n  var name = req.body.name;\n  var text = req.body.text; //console.log(`${name} and ${text}`);\n\n  connection.query('INSERT INTO comments (name, text) VALUES (?, ?)', [name, text], function (err, result) {\n    if (err) throw err;\n  });\n});\napp.post('/data/delete', function (req, res) {\n  var id = req.body.id;\n  connection.query('DELETE FROM comments WHERE id = ?', [id], function (err, result) {\n    if (err) throw err;\n  });\n});\napp.listen(PORT, function () {\n  console.log(\"Server listening at port \".concat(PORT, \".\"));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJQT1JUIiwicHJvY2VzcyIsImVudiIsIkhUVFBfUE9SVCIsImFwcCIsImJvZHlQYXJzZXIiLCJyZXF1aXJlIiwidXNlIiwidXJsZW5jb2RlZCIsImV4dGVuZGVkIiwianNvbiIsIm15c3FsIiwiY29ubmVjdGlvbiIsImNyZWF0ZUNvbm5lY3Rpb24iLCJob3N0IiwidXNlciIsInBhc3N3b3JkIiwiZGF0YWJhc2UiLCJwb3J0IiwiY29ubmVjdCIsImVyciIsImNvbnNvbGUiLCJlcnJvciIsInN0YWNrIiwiZXhwcmVzcyIsInBhdGgiLCJqb2luIiwiX19kaXJuYW1lIiwiZ2V0IiwicmVxIiwicmVzIiwic2VuZCIsInF1ZXJ5IiwicmVzdWx0cyIsImxvZyIsInBvc3QiLCJuYW1lIiwiYm9keSIsInRleHQiLCJyZXN1bHQiLCJpZCIsImxpc3RlbiJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7OztBQUVBLElBQU1BLElBQUksR0FBR0MsT0FBTyxDQUFDQyxHQUFSLENBQVlDLFNBQVosSUFBeUIsSUFBdEM7QUFDQSxJQUFNQyxHQUFHLEdBQUcsMEJBQVo7O0FBQ0EsSUFBTUMsVUFBVSxHQUFHQyxPQUFPLENBQUMsYUFBRCxDQUExQjs7QUFDQUYsR0FBRyxDQUFDRyxHQUFKLENBQVFGLFVBQVUsQ0FBQ0csVUFBWCxDQUFzQjtBQUFFQyxFQUFBQSxRQUFRLEVBQUU7QUFBWixDQUF0QixDQUFSO0FBQ0FMLEdBQUcsQ0FBQ0csR0FBSixDQUFRRixVQUFVLENBQUNLLElBQVgsRUFBUjs7QUFHQSxJQUFNQyxLQUFLLEdBQUdMLE9BQU8sQ0FBQyxPQUFELENBQXJCO0FBRUE7Ozs7Ozs7OztBQU9BLElBQU1NLFVBQVUsR0FBR0QsS0FBSyxDQUFDRSxnQkFBTixDQUF1QjtBQUN4Q0MsRUFBQUEsSUFBSSxFQUFFLCtEQURrQztBQUV4Q0MsRUFBQUEsSUFBSSxFQUFFLE1BRmtDO0FBR3hDQyxFQUFBQSxRQUFRLEVBQUUsYUFIOEI7QUFJeENDLEVBQUFBLFFBQVEsRUFBRSxNQUo4QjtBQUt4Q0MsRUFBQUEsSUFBSSxFQUFFO0FBTGtDLENBQXZCLENBQW5CO0FBUUFOLFVBQVUsQ0FBQ08sT0FBWCxDQUFtQixVQUFTQyxHQUFULEVBQWM7QUFDL0IsTUFBSUEsR0FBSixFQUFTO0FBQ1BDLElBQUFBLE9BQU8sQ0FBQ0MsS0FBUixDQUFjLGlDQUFpQ0YsR0FBRyxDQUFDRyxLQUFuRDtBQUNBO0FBQ0Q7QUFDRixDQUxEO0FBUUFuQixHQUFHLENBQUNHLEdBQUosQ0FBUWlCLDhCQUFlQyxpQkFBS0MsSUFBTCxDQUFVQyxTQUFWLEVBQXFCLFFBQXJCLEVBQStCLE9BQS9CLENBQWYsQ0FBUixFLENBQWlFOztBQUVqRXZCLEdBQUcsQ0FBQ3dCLEdBQUosQ0FBUSxHQUFSLEVBQWEsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDekJBLEVBQUFBLEdBQUcsQ0FBQ0MsSUFBSixDQUFTLG9CQUFUO0FBQ0QsQ0FGRDtBQUlBM0IsR0FBRyxDQUFDd0IsR0FBSixDQUFRLE9BQVIsRUFBaUIsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDN0JsQixFQUFBQSxVQUFVLENBQUNvQixLQUFYLENBQ0Usd0JBREYsRUFFRSxVQUFDVixLQUFELEVBQVFXLE9BQVIsRUFBb0I7QUFDbEJaLElBQUFBLE9BQU8sQ0FBQ2EsR0FBUixDQUFZRCxPQUFaO0FBQ0FILElBQUFBLEdBQUcsQ0FBQ3BCLElBQUosQ0FBU3VCLE9BQVQ7QUFDRCxHQUxIO0FBUUQsQ0FURDtBQVdBN0IsR0FBRyxDQUFDK0IsSUFBSixDQUFTLGNBQVQsRUFBeUIsVUFBQ04sR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDckM7QUFDQSxNQUFNTSxJQUFJLEdBQUdQLEdBQUcsQ0FBQ1EsSUFBSixDQUFTRCxJQUF0QjtBQUNBLE1BQU1FLElBQUksR0FBR1QsR0FBRyxDQUFDUSxJQUFKLENBQVNDLElBQXRCLENBSHFDLENBSXJDOztBQUNBMUIsRUFBQUEsVUFBVSxDQUFDb0IsS0FBWCxDQUFpQixpREFBakIsRUFBb0UsQ0FBQ0ksSUFBRCxFQUFPRSxJQUFQLENBQXBFLEVBQWtGLFVBQUNsQixHQUFELEVBQU1tQixNQUFOLEVBQWlCO0FBQ2pHLFFBQUluQixHQUFKLEVBQVMsTUFBTUEsR0FBTjtBQUNSLEdBRkg7QUFHRCxDQVJEO0FBVUFoQixHQUFHLENBQUMrQixJQUFKLENBQVMsY0FBVCxFQUF5QixVQUFDTixHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNyQyxNQUFNVSxFQUFFLEdBQUdYLEdBQUcsQ0FBQ1EsSUFBSixDQUFTRyxFQUFwQjtBQUNBNUIsRUFBQUEsVUFBVSxDQUFDb0IsS0FBWCxDQUFpQixtQ0FBakIsRUFBc0QsQ0FBQ1EsRUFBRCxDQUF0RCxFQUE0RCxVQUFDcEIsR0FBRCxFQUFNbUIsTUFBTixFQUFpQjtBQUMzRSxRQUFJbkIsR0FBSixFQUFTLE1BQU1BLEdBQU47QUFDUixHQUZIO0FBR0QsQ0FMRDtBQU9BaEIsR0FBRyxDQUFDcUMsTUFBSixDQUFXekMsSUFBWCxFQUFpQixZQUFNO0FBQ3JCcUIsRUFBQUEsT0FBTyxDQUFDYSxHQUFSLG9DQUF3Q2xDLElBQXhDO0FBQ0QsQ0FGRCIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXFNoaW5ub3N1a2VcXHJlYWN0LWV4cHJlc3MtZWxiXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgcGF0aCBmcm9tICdwYXRoJztcclxuaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XHJcblxyXG5jb25zdCBQT1JUID0gcHJvY2Vzcy5lbnYuSFRUUF9QT1JUIHx8IDQwMDE7XHJcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcclxuY29uc3QgYm9keVBhcnNlciA9IHJlcXVpcmUoJ2JvZHktcGFyc2VyJyk7XHJcbmFwcC51c2UoYm9keVBhcnNlci51cmxlbmNvZGVkKHsgZXh0ZW5kZWQ6IGZhbHNlIH0pKTtcclxuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSk7XHJcblxyXG5cclxuY29uc3QgbXlzcWwgPSByZXF1aXJlKFwibXlzcWxcIik7XHJcblxyXG4vKmNvbnN0IGNvbm5lY3Rpb24gPSBteXNxbC5jcmVhdGVDb25uZWN0aW9uKHtcclxuICBob3N0OiBwcm9jZXNzLmVudi5SRFNfSE9TVE5BTUUsXHJcbiAgdXNlcjogcHJvY2Vzcy5lbnYuUkRTX1VTRVJOQU1FLFxyXG4gIHBhc3N3b3JkOiBwcm9jZXNzLmVudi5SRFNfUEFTU1dPUkQsXHJcbiAgcG9ydDogcHJvY2Vzcy5lbnYuUkRTX1BPUlQsXHJcbiAgZGF0YWJhc2U6IHByb2Nlc3MuZW52LlJEU19EQl9OQU1FXHJcbn0pOyovXHJcbmNvbnN0IGNvbm5lY3Rpb24gPSBteXNxbC5jcmVhdGVDb25uZWN0aW9uKHtcclxuICBob3N0OiBcImFhMTAzNWJ0aDdtMnQxZS5jbHNibnI3cDRxNG0uYXAtbm9ydGhlYXN0LTEucmRzLmFtYXpvbmF3cy5jb21cIixcclxuICB1c2VyOiBcInJvb3RcIixcclxuICBwYXNzd29yZDogXCJNeVNRTDczMXNpblwiLFxyXG4gIGRhdGFiYXNlOiBcImViZGJcIixcclxuICBwb3J0OiBcIjMzMDZcIlxyXG59KTtcclxuXHJcbmNvbm5lY3Rpb24uY29ubmVjdChmdW5jdGlvbihlcnIpIHtcclxuICBpZiAoZXJyKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKCdEYXRhYmFzZSBjb25uZWN0aW9uIGZhaWxlZDogJyArIGVyci5zdGFjayk7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG59KTtcclxuXHJcblxyXG5hcHAudXNlKGV4cHJlc3Muc3RhdGljKHBhdGguam9pbihfX2Rpcm5hbWUsICdjbGllbnQnLCAnYnVpbGQnKSkpOy8vIDwtLSBHZXQgZnJvbnQtZW5kXHJcblxyXG5hcHAuZ2V0KCcvJywgKHJlcSwgcmVzKSA9PiB7XHJcbiAgcmVzLnNlbmQoJ2p1c3QgZ29ubmEgc2VuZCBpdCcpO1xyXG59KTtcclxuXHJcbmFwcC5nZXQoJy9kYXRhJywgKHJlcSwgcmVzKSA9PiB7XHJcbiAgY29ubmVjdGlvbi5xdWVyeShcclxuICAgICdTRUxFQ1QgKiBGUk9NIGNvbW1lbnRzJyxcclxuICAgIChlcnJvciwgcmVzdWx0cykgPT4ge1xyXG4gICAgICBjb25zb2xlLmxvZyhyZXN1bHRzKTtcclxuICAgICAgcmVzLmpzb24ocmVzdWx0cyk7XHJcbiAgICB9XHJcbiAgKTtcclxuXHJcbn0pO1xyXG5cclxuYXBwLnBvc3QoJy9kYXRhL2NyZWF0ZScsIChyZXEsIHJlcykgPT4ge1xyXG4gIC8vY29uc29sZS5sb2cocmVxLmJvZHkpO1xyXG4gIGNvbnN0IG5hbWUgPSByZXEuYm9keS5uYW1lO1xyXG4gIGNvbnN0IHRleHQgPSByZXEuYm9keS50ZXh0O1xyXG4gIC8vY29uc29sZS5sb2coYCR7bmFtZX0gYW5kICR7dGV4dH1gKTtcclxuICBjb25uZWN0aW9uLnF1ZXJ5KCdJTlNFUlQgSU5UTyBjb21tZW50cyAobmFtZSwgdGV4dCkgVkFMVUVTICg/LCA/KScsIFtuYW1lLCB0ZXh0XSwgKGVyciwgcmVzdWx0KSA9PiB7XHJcbiAgICBpZiAoZXJyKSB0aHJvdyBlcnI7XHJcbiAgICB9KVxyXG59KTtcclxuXHJcbmFwcC5wb3N0KCcvZGF0YS9kZWxldGUnLCAocmVxLCByZXMpID0+IHtcclxuICBjb25zdCBpZCA9IHJlcS5ib2R5LmlkO1xyXG4gIGNvbm5lY3Rpb24ucXVlcnkoJ0RFTEVURSBGUk9NIGNvbW1lbnRzIFdIRVJFIGlkID0gPycsIFtpZF0sIChlcnIsIHJlc3VsdCkgPT4ge1xyXG4gICAgaWYgKGVycikgdGhyb3cgZXJyO1xyXG4gICAgfSlcclxufSk7XHJcblxyXG5hcHAubGlzdGVuKFBPUlQsICgpID0+IHtcclxuICBjb25zb2xlLmxvZyhgU2VydmVyIGxpc3RlbmluZyBhdCBwb3J0ICR7UE9SVH0uYCk7XHJcbn0pOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "PORT",
        "process",
        "env",
        "HTTP_PORT",
        "app",
        "bodyParser",
        "require",
        "use",
        "urlencoded",
        "extended",
        "json",
        "mysql",
        "connection",
        "createConnection",
        "host",
        "user",
        "password",
        "database",
        "port",
        "connect",
        "err",
        "console",
        "error",
        "stack",
        "express",
        "path",
        "join",
        "__dirname",
        "get",
        "req",
        "res",
        "send",
        "query",
        "results",
        "log",
        "post",
        "name",
        "body",
        "text",
        "result",
        "id",
        "listen"
      ],
      "mappings": ";;AAAA;;AACA;;;;AAEA,IAAMA,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,SAAZ,IAAyB,IAAtC;AACA,IAAMC,GAAG,GAAG,0BAAZ;;AACA,IAAMC,UAAU,GAAGC,OAAO,CAAC,aAAD,CAA1B;;AACAF,GAAG,CAACG,GAAJ,CAAQF,UAAU,CAACG,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AACAL,GAAG,CAACG,GAAJ,CAAQF,UAAU,CAACK,IAAX,EAAR;;AAGA,IAAMC,KAAK,GAAGL,OAAO,CAAC,OAAD,CAArB;AAEA;;;;;;;;;AAOA,IAAMM,UAAU,GAAGD,KAAK,CAACE,gBAAN,CAAuB;AACxCC,EAAAA,IAAI,EAAE,+DADkC;AAExCC,EAAAA,IAAI,EAAE,MAFkC;AAGxCC,EAAAA,QAAQ,EAAE,aAH8B;AAIxCC,EAAAA,QAAQ,EAAE,MAJ8B;AAKxCC,EAAAA,IAAI,EAAE;AALkC,CAAvB,CAAnB;AAQAN,UAAU,CAACO,OAAX,CAAmB,UAASC,GAAT,EAAc;AAC/B,MAAIA,GAAJ,EAAS;AACPC,IAAAA,OAAO,CAACC,KAAR,CAAc,iCAAiCF,GAAG,CAACG,KAAnD;AACA;AACD;AACF,CALD;AAQAnB,GAAG,CAACG,GAAJ,CAAQiB,8BAAeC,iBAAKC,IAAL,CAAUC,SAAV,EAAqB,QAArB,EAA+B,OAA/B,CAAf,CAAR,E,CAAiE;;AAEjEvB,GAAG,CAACwB,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzBA,EAAAA,GAAG,CAACC,IAAJ,CAAS,oBAAT;AACD,CAFD;AAIA3B,GAAG,CAACwB,GAAJ,CAAQ,OAAR,EAAiB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC7BlB,EAAAA,UAAU,CAACoB,KAAX,CACE,wBADF,EAEE,UAACV,KAAD,EAAQW,OAAR,EAAoB;AAClBZ,IAAAA,OAAO,CAACa,GAAR,CAAYD,OAAZ;AACAH,IAAAA,GAAG,CAACpB,IAAJ,CAASuB,OAAT;AACD,GALH;AAQD,CATD;AAWA7B,GAAG,CAAC+B,IAAJ,CAAS,cAAT,EAAyB,UAACN,GAAD,EAAMC,GAAN,EAAc;AACrC;AACA,MAAMM,IAAI,GAAGP,GAAG,CAACQ,IAAJ,CAASD,IAAtB;AACA,MAAME,IAAI,GAAGT,GAAG,CAACQ,IAAJ,CAASC,IAAtB,CAHqC,CAIrC;;AACA1B,EAAAA,UAAU,CAACoB,KAAX,CAAiB,iDAAjB,EAAoE,CAACI,IAAD,EAAOE,IAAP,CAApE,EAAkF,UAAClB,GAAD,EAAMmB,MAAN,EAAiB;AACjG,QAAInB,GAAJ,EAAS,MAAMA,GAAN;AACR,GAFH;AAGD,CARD;AAUAhB,GAAG,CAAC+B,IAAJ,CAAS,cAAT,EAAyB,UAACN,GAAD,EAAMC,GAAN,EAAc;AACrC,MAAMU,EAAE,GAAGX,GAAG,CAACQ,IAAJ,CAASG,EAApB;AACA5B,EAAAA,UAAU,CAACoB,KAAX,CAAiB,mCAAjB,EAAsD,CAACQ,EAAD,CAAtD,EAA4D,UAACpB,GAAD,EAAMmB,MAAN,EAAiB;AAC3E,QAAInB,GAAJ,EAAS,MAAMA,GAAN;AACR,GAFH;AAGD,CALD;AAOAhB,GAAG,CAACqC,MAAJ,CAAWzC,IAAX,EAAiB,YAAM;AACrBqB,EAAAA,OAAO,CAACa,GAAR,oCAAwClC,IAAxC;AACD,CAFD",
      "sourceRoot": "C:\\Users\\Shinnosuke\\react-express-elb\\",
      "sourcesContent": [
        "import path from 'path';\r\nimport express from 'express';\r\n\r\nconst PORT = process.env.HTTP_PORT || 4001;\r\nconst app = express();\r\nconst bodyParser = require('body-parser');\r\napp.use(bodyParser.urlencoded({ extended: false }));\r\napp.use(bodyParser.json());\r\n\r\n\r\nconst mysql = require(\"mysql\");\r\n\r\n/*const connection = mysql.createConnection({\r\n  host: process.env.RDS_HOSTNAME,\r\n  user: process.env.RDS_USERNAME,\r\n  password: process.env.RDS_PASSWORD,\r\n  port: process.env.RDS_PORT,\r\n  database: process.env.RDS_DB_NAME\r\n});*/\r\nconst connection = mysql.createConnection({\r\n  host: \"aa1035bth7m2t1e.clsbnr7p4q4m.ap-northeast-1.rds.amazonaws.com\",\r\n  user: \"root\",\r\n  password: \"MySQL731sin\",\r\n  database: \"ebdb\",\r\n  port: \"3306\"\r\n});\r\n\r\nconnection.connect(function(err) {\r\n  if (err) {\r\n    console.error('Database connection failed: ' + err.stack);\r\n    return;\r\n  }\r\n});\r\n\r\n\r\napp.use(express.static(path.join(__dirname, 'client', 'build')));// <-- Get front-end\r\n\r\napp.get('/', (req, res) => {\r\n  res.send('just gonna send it');\r\n});\r\n\r\napp.get('/data', (req, res) => {\r\n  connection.query(\r\n    'SELECT * FROM comments',\r\n    (error, results) => {\r\n      console.log(results);\r\n      res.json(results);\r\n    }\r\n  );\r\n\r\n});\r\n\r\napp.post('/data/create', (req, res) => {\r\n  //console.log(req.body);\r\n  const name = req.body.name;\r\n  const text = req.body.text;\r\n  //console.log(`${name} and ${text}`);\r\n  connection.query('INSERT INTO comments (name, text) VALUES (?, ?)', [name, text], (err, result) => {\r\n    if (err) throw err;\r\n    })\r\n});\r\n\r\napp.post('/data/delete', (req, res) => {\r\n  const id = req.body.id;\r\n  connection.query('DELETE FROM comments WHERE id = ?', [id], (err, result) => {\r\n    if (err) throw err;\r\n    })\r\n});\r\n\r\napp.listen(PORT, () => {\r\n  console.log(`Server listening at port ${PORT}.`);\r\n});"
      ]
    },
    "sourceType": "script",
    "mtime": 1594107710796
  }
}